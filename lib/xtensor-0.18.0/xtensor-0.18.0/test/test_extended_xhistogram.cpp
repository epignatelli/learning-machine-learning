/***************************************************************************
* Copyright (c) 2016, Johan Mabille, Sylvain Corlay and Wolf Vollprecht    *
*                                                                          *
* Distributed under the terms of the BSD 3-Clause License.                 *
*                                                                          *
* The full license is in the file LICENSE, distributed with this software. *
****************************************************************************/

// This file is generated from test/files/cppy_source/test_extended_xhistogram.cppy by preprocess.py!

#include <algorithm>

#include "gtest/gtest.h"
#include "xtensor/xarray.hpp"
#include "xtensor/xtensor.hpp"
#include "xtensor/xhistogram.hpp"

namespace xt
{
    using namespace xt::placeholders;

    /*py

    a = (np.random.random(1000) * 51).astype(np.int)

    count, bin_edges  = np.histogram(a, 50)

    prob, _  = np.histogram(a, 50, density=True)

    */
    TEST(xtest_extended_histogram, histogram_auto)
    {
        // py_a
        xarray<long> py_a = {17,35,19, 8,24,10,31,29,31,46, 5,47,13,14,48,25,45, 1,37, 2, 5, 7,22,48,
                             44,12, 3, 8,49,41, 7,11, 0,11, 4,27,15,22,22,18,44,25,32,37,13,41,28,48,
                              6,23,16,33,45,37,43, 5,24,45,48, 8,27,11,28,38, 8,47,32,42,25,12,32,25,
                             36,48,47,41,28,49,22,20, 5,31,33,27, 3,19,35,25,48,21,48,46,26,38,23,44,
                             26,20, 1, 2, 2,40, 5,50,22,10,28,34,10,45, 1,15,15,49,33,13,10, 0,27,37,
                             21, 7,33,49,15, 4,21,11,15,38,38,46,18,31,13,44,49,17,44,26,45,38, 9,35,
                             48,48,48,24,48,33,37, 7,26,29,41,26,23, 6,41,19,46,34,43,30,42,49,35, 5,
                             47,12,32,27,41, 8,14,19,24,18,31,47,17,48, 2, 2,27,23,50,30,15,37,21,11,
                             39, 9,37,50,15,45,16,13, 2,47,27,43, 0,50,28,49,48,14,40,41, 8,26,35,33,
                             47,23,33, 0,30,43, 7,47, 0, 3,19,42,19,20, 8, 2,35,44, 2,18,10, 1,30,50,
                             17,45,45,30,12,26,22,39,49, 4,23,50,40,26,19, 1, 0,38,18,36,32,42,32,26,
                             10,12,50,22, 6,13, 8, 7,22,42,30,28, 2,47,11,39,37,38,23,41,48, 4,22, 1,
                              4,49,42,44,33,17, 5, 6,16,49,25, 9, 2, 2,43,49,49,32,41, 1,21,17,33,34,
                             37,20,26,35,28,13,33,38,37,39,46,22,12,50, 6,48,33, 3,30,32,34,49,34, 5,
                             24, 0,47,35, 7,29,11, 7,39, 8,24,41,44,11,24,37,29,10,17,31,10, 6,29, 1,
                             33, 5,15,35,37,11,20,14,41,19,39,21,17,49,37,31, 8,50,13, 0,48,40,16,49,
                             24,45,41,11,32,48, 9,34,16, 1,48,15, 0,28,12,50, 2,16, 6,25,50, 6,22,36,
                             32,13,18,40,13,19, 2, 9,31,44, 8,17,28,16,42,30,40,31,14,35,36,42,21,42,
                             35, 9,37,17,24,36,49,29,25,46,16,38,47,35,34, 9,43,22,14,18,14,43,29,38,
                              2,47,45,26,42,22,49, 8,10, 6,45,31,23,19,32, 8,43,18,34,40,31,28, 1,42,
                             28,42,19, 4, 9,20,16,12,11,42,31, 9,28,45,45,10,13,23,39,40,24,14, 6,26,
                             47,43,39, 3,24, 6,43,24,39,44, 2,27,37,15,11,32,28,42,22,48,25,25,24,26,
                             12,15,36,13,40,39,26,27,35, 5,14,41,12, 8,29,41,29,33,36,39,26,36,38, 5,
                             45, 9,13,13,17,49,20,29,34,19,31,32,14,31,20,41,27, 5,46,29, 6, 3, 6,43,
                             11,17, 9,44,35,32,26,32,18,20, 2,40, 8,41,19,26, 6,23,33,17,22,10,23,35,
                             23,15,29,18,17,47,14,19,12,20,24,41, 9,16,44,16,38,48, 8, 2,50,48, 2, 9,
                             38,30,17,16,20, 5,33,31,16, 2,36, 8,35,37,31,32,19,14, 8,38,49,23,15, 1,
                             43,26,36, 8,25,48, 0,50,25,13,25,23, 0,17,25,38,35,24, 0,16, 5,31,37,38,
                              7,21,48,29,49,29, 0,18, 9,46,12, 8,17,28, 6, 0,50,26,36, 5,20,47, 6,44,
                             17,13, 3,46,19,44,34,37,49,22,32, 9,48,34,39,49,26,43, 7,41,16,19,20,16,
                             25,22, 8,42, 9,45, 3, 9,27,39, 1,47,42, 4,43,13,33, 9, 7,30, 7,48, 1,35,
                              5,24,16,36,17,39, 8, 0,28,26,32,39,41,34,34,46,44,12,41,31,15,34,15,15,
                             33,29,34,17,28, 2,18,28,28,14,15,18,12,28,14,35,24,38,24,22,36,39,45,19,
                             42,41, 5,24, 2,20,48,13,36,37,41,50,39, 3,11,43,44,13,23,40, 6,13,16,32,
                             21,32,24,39,33,21,23,35,12, 8,25,13,49,27,32,21,49,22,11,20,25,41,43,26,
                             29,16,27,36,22,32,20, 6,22,22,40,37, 7, 7,34,37,35, 7,17,20,25,12, 8,24,
                             12,31,50, 0,15,49,44,11, 5,15,25,32,45,18, 0,30,49, 1,10,11, 9,27,19,19,
                             49, 3, 6,11,47,42,34, 9,47,10,34, 2,24,22,25, 7, 2,25,31,24,37,15, 7,33,
                             39,47,19, 9,17,21,12,34, 1,12,33,42, 7, 5,16, 0,15,43, 8, 6,25,18, 3,44,
                             19,40,43,32,12,28,42,40,37,43,16, 5,44, 5,46,29, 9,11,50,47,14,47, 1,28,
                             12,15,27,10, 6,10,16,37,28,46,35, 8,10,25, 5,46,21,35,12,45,45,19,41,29,
                             18,11,40, 4, 9,48,35,23,41,40,22,34,39,30,18,45};
        // py_bin_edges
        xarray<double> py_bin_edges = { 0., 1., 2., 3., 4., 5., 6., 7., 8., 9.,10.,11.,12.,13.,14.,15.,16.,17.,
                                       18.,19.,20.,21.,22.,23.,24.,25.,26.,27.,28.,29.,30.,31.,32.,33.,34.,35.,
                                       36.,37.,38.,39.,40.,41.,42.,43.,44.,45.,46.,47.,48.,49.,50.};
        // py_count
        xarray<long> py_count = {18,16,23,11, 8,22,21,18,26,23,16,20,22,21,15,22,22,22,17,23,17,13,24,17,
                                 23,23,22,15,22,18,12,20,24,20,20,24,15,24,17,20,16,25,20,19,19,20,13,21,
                                 27,44};
        // py_prob
        xarray<double> py_prob = {0.018,0.016,0.023,0.011,0.008,0.022,0.021,0.018,0.026,0.023,0.016,0.02 ,
                                  0.022,0.021,0.015,0.022,0.022,0.022,0.017,0.023,0.017,0.013,0.024,0.017,
                                  0.023,0.023,0.022,0.015,0.022,0.018,0.012,0.02 ,0.024,0.02 ,0.02 ,0.024,
                                  0.015,0.024,0.017,0.02 ,0.016,0.025,0.02 ,0.019,0.019,0.02 ,0.013,0.021,
                                  0.027,0.044};

        auto bin_edges = xt::histogram_bin_edges(py_a, std::size_t(50));

        auto count = xt::histogram(py_a, bin_edges);

        auto prob = xt::histogram(py_a, bin_edges, true);

        EXPECT_EQ(xt::cast<double>(bin_edges), py_bin_edges);

        EXPECT_EQ(count, xt::cast<double>(py_count));

        EXPECT_EQ(prob, py_prob);
    }
}

